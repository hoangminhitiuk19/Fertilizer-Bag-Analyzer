import time
import easyocr
import re
import cv2
import streamlit as st
from PIL import Image
from gtts import gTTS
import io
import numpy as np
import base64
import speech_recognition as sr 
import winsound

number_word_map = {
    "m·ªôt": 1, "hai": 2, "ba": 3, "b·ªën": 4, "nƒÉm": 5, "s√°u": 6,
    "b·∫£y": 7, "t√°m": 8, "ch√≠n": 9, "m∆∞·ªùi": 10, "m∆∞·ªùi m·ªôt": 11,
    "m∆∞·ªùi hai": 12, "m∆∞·ªùi ba": 13, "m∆∞·ªùi b·ªën": 14, "m∆∞·ªùi lƒÉm": 15
    # Add more mappings as needed
}

def convert_vietnamese_number_to_int(vietnamese_number):
    vietnamese_number = vietnamese_number.strip().lower()
    if vietnamese_number in number_word_map:
        return number_word_map[vietnamese_number]
    else:
        try:
            return int(vietnamese_number)
        except ValueError:
            return None

def play_beep():
    winsound.Beep(1000, 500)


def extract_npk_from_image(image_data):
    reader = easyocr.Reader(['en'], gpu=True, verbose=False)
    image = np.array(Image.open(image_data))
    height, width = image.shape[:2]

    if width > height:
        image = cv2.rotate(image, cv2.ROTATE_90_CLOCKWISE)

    result = reader.readtext(image, detail=0)
    full_text = ' '.join(result)
    match = re.search(r'\b(\d+)-(\d+)-(\d+)\b', full_text)

    if match:
        n, p, k = match.groups()
        return int(n), int(p), int(k)
    else:
        return None

def speak_vietnamese(text):
    tts = gTTS(text, lang='vi')  
    audio_buffer = io.BytesIO()
    tts.write_to_fp(audio_buffer)
    audio_buffer.seek(0)
    audio_base64 = base64.b64encode(audio_buffer.read()).decode("utf-8")
    audio_html = f"""
        <audio autoplay style="display:none;">
            <source src="data:audio/mp3;base64,{audio_base64}" type="audio/mp3">
        </audio>
    """
    st.markdown(audio_html, unsafe_allow_html=True)
    
def extract_quantity(text):
    match = re.search(r'\bmua\b.*?(\d+)\s*', text, re.IGNORECASE)
    if match:
        quantity = int(match.group(1))
        return quantity
    
    words = text.split()
    for word in words:
        quantity = convert_vietnamese_number_to_int(word)
        if quantity is not None:
            return quantity
    
    return None

def listen_to_user():
    recognizer = sr.Recognizer()
    with sr.Microphone(device_index=2) as source:
        st.write("ƒêang l·∫Øng nghe...")
        recognizer.adjust_for_ambient_noise(source, duration=1)
        audio = recognizer.listen(source)
        st.write("ƒê√£ nghe, ƒëang x·ª≠ l√Ω...")
    try:
        text = recognizer.recognize_google(audio, language="vi-VN")
        st.write(f"You said: {text}")
        return text
    except sr.UnknownValueError:
        st.write("Could not understand the audio.")
        return None
    except sr.RequestError as e:
        st.write(f"Error with the speech recognition service: {e}")
        return None

def hear_user_input():
    user_input = listen_to_user()
    
    if user_input is None:
        st.write("Please say the quantity again.")
        return None

    quantity = extract_quantity(user_input)
    
    if quantity is None:
        st.write("Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c s·ªë l∆∞·ª£ng. Vui l√≤ng n√≥i l·∫°i theo m·∫´u 't√¥i mua [s·ªë l∆∞·ª£ng] t√∫i'.")
        speak_vietnamese("Kh√¥ng nh·∫≠n di·ªán ƒë∆∞·ª£c s·ªë l∆∞·ª£ng. Vui l√≤ng n√≥i l·∫°i theo m·∫´u 't√¥i mua [s·ªë l∆∞·ª£ng] t√∫i'.")
        time.sleep(8)
        play_beep()
        return None
    
    return quantity

def confirm_quantity(quantity):
    while True:
        confirmation_text = f"B·∫°n mu·ªën mua {quantity} t√∫i ph·∫£i kh√¥ng? N·∫øu ƒë√∫ng, h√£y n√≥i 'ƒê√∫ng r·ªìi', n·∫øu sai, h√£y n√≥i 'Sai r·ªìi'."
        speak_vietnamese(confirmation_text)
        time.sleep(8)
        play_beep() 
        
        start_time = time.time()
        confirmation_response = None
        
        while time.time() - start_time < 10:
            confirmation_response = listen_to_user()
            if confirmation_response:
                break
            
        if confirmation_response:
            if "ƒë√∫ng r·ªìi" in confirmation_response.lower():
                speak_vietnamese(f"Mua {quantity} t√∫i")
                time.sleep(2) 
                return quantity 

            elif "sai r·ªìi" in confirmation_response.lower():
                speak_vietnamese("Sai r·ªìi! Xin vui l√≤ng n√≥i l·∫°i s·ªë l∆∞·ª£ng.")
                time.sleep(4)
                play_beep()
                return False 

            else:
                st.write("Kh√¥ng r√µ c√¢u tr·∫£ l·ªùi. Vui l√≤ng tr·∫£ l·ªùi 'ƒê√∫ng r·ªìi' ho·∫∑c 'Sai r·ªìi'.")
                speak_vietnamese("Kh√¥ng r√µ c√¢u tr·∫£ l·ªùi. Vui l√≤ng tr·∫£ l·ªùi 'ƒê√∫ng r·ªìi' ho·∫∑c 'Sai r·ªìi'.")
                time.sleep(3)
                play_beep()
        else:
            st.write("Kh√¥ng nghe th·∫•y c√¢u tr·∫£ l·ªùi. Vui l√≤ng n√≥i l·∫°i.")
            speak_vietnamese("Kh√¥ng nghe th·∫•y c√¢u tr·∫£ l·ªùi. Vui l√≤ng n√≥i l·∫°i.")
            time.sleep(3)
            play_beep()

def process_purchase_request():
    while True:
        quantity = hear_user_input()
        
        if quantity:
            result = confirm_quantity(quantity)
            if result:
                return f"{result} t√∫i"
            else:
                continue

st.set_page_config(
    page_title="X√°c ƒê·ªãnh Gi√° Tr·ªã Ph√¢n B√≥n NPK", 
    page_icon="üß™",
    layout="centered"
)
# Streamlit app setup
st.title("X√°c ƒê·ªãnh Gi√° Tr·ªã Ph√¢n B√≥n NPK")
st.write("H√£y t·∫£i l√™n h√¨nh ·∫£nh bao ph√¢n b√≥n ƒë·ªÉ x√°c ƒë·ªãnh gi√° tr·ªã NPK.")

# File upload
uploaded_file = st.file_uploader("Ch·ªçn h√¨nh ·∫£nh...", type=["png", "jpg", "jpeg"])

if uploaded_file is not None:
    st.image(uploaded_file, caption="H√¨nh ·∫£nh ƒë√£ t·∫£i l√™n", use_container_width=True)

    npk_values = extract_npk_from_image(uploaded_file)

    if npk_values:
        n, p, k = npk_values
        result_text = f"Gi√° tr·ªã NPK: N={n}%, P={p}%, K={k}%"
        st.write(result_text)
        speak_vietnamese(result_text)
        time.sleep(9)
        speak_vietnamese("H√£y n√≥i sau ti·∫øng b√≠p")
        time.sleep(2)
        speak_vietnamese("B·∫°n mu·ªën mua bao nhi√™u t√∫i?")
        time.sleep(3)
        play_beep() 
        result = process_purchase_request()
        st.write(f"S·ªë l∆∞·ª£ng: {result}")
    else:
        st.write("Kh√¥ng t√¨m th·∫•y NPK.")
        speak_vietnamese("Kh√¥ng t√¨m th·∫•y gi√° tr·ªã NPK.")


